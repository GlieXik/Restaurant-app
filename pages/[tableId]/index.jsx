import Head from "next/head";
import MenuCom from "@/components/Menu/Menu";
import Grid from "@mui/material/Grid";
import { styled, Typography } from "@mui/material";
import ListMenu from "@/components/Menu/ListMenu/ListMenu";
import InfoPanel from "@/components/InfoPanel/InfoPanel";
import dbConnect from "@/lib/mongodb";
import MenuModel from "@/models/Menu";
import { useContext } from "react";
import { SearchContext } from "@/components/SearchContext";
import { useRouter } from "next/router";
import TablesModel from "@/models/Tables";

const GridStyled = styled(Grid)(({ theme }) => ({
  [theme.breakpoints.up("md")]: {
    position: "sticky",
    top: 80,
    alignSelf: "start",
  },
}));
export default function Home({ menu, tables }) {
  const { searchValue } = useContext(SearchContext);

  const filteredMenuBySearch = menu.filter((item) => {
    return item.name.toLowerCase().includes(searchValue.toLowerCase());
  });

  const router = useRouter();
  const tableId = router.query.tableId;

  const activeTable = () => {
    return tables.includes(tableId);
  };

  return (
    <>
      <Head>
        <title>Restaurant</title>
        <meta name="description" content="Generated by create next app" />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1, maximum-scale=1"
        />
        <link rel="icon" href="favicon.ico" />
      </Head>

      {activeTable() ? (
        <main>
          <Grid container sx={{ mt: 1 }} columnSpacing={3} rowSpacing={1}>
            <GridStyled
              md={3}
              xs={12}
              item
              sx={{ display: { xs: "none", md: "block" } }}
            >
              <MenuCom menu={menu}></MenuCom>
            </GridStyled>
            <Grid md={6} xs={12} item>
              <ListMenu menu={filteredMenuBySearch}></ListMenu>
            </Grid>
            <GridStyled md={3} xs={12} item>
              <InfoPanel></InfoPanel>
            </GridStyled>
          </Grid>
        </main>
      ) : (
        <>
          <Typography variant="h1" textAlign={"center"}>
            сторінка не валідна
          </Typography>
        </>
      )}
    </>
  );
}

export async function getServerSideProps(ctx) {
  try {
    await dbConnect();

    const results = await MenuModel.find({});
    const table = await TablesModel.find({});
    const tavblesArr = table.map((e) => e.tables);
    const sortMenu = results.sort((a, b) => (a.category > b.category ? 1 : -1));
    return {
      props: {
        menu: JSON.parse(JSON.stringify(sortMenu)),
        tables: JSON.parse(JSON.stringify(tavblesArr[0])),
      },
    };
  } catch (error) {
    console.log(error);
    return { notFound: true };
  }
}
